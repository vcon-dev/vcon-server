version: "3.3"
networks:
  conserver:
    external: true

services:
  conserver:
    build:
      dockerfile: ./docker/Dockerfile
      context: .
    command: "python ./server/main.py"
    volumes:
      - .:/app
    depends_on:
      - redis
    env_file:
      - .env
    stop_grace_period: 5s
    networks:
      - conserver
    labels:
      - "com.datadoghq.ad.check_names=['python']"
      - "com.datadoghq.ad.init_configs=[{}]"
      - "com.datadoghq.ad.instances=[{'python_service': 'conserver.main'}]"

  api:
    build:
      dockerfile: ./docker/Dockerfile
      context: .
    command: /bin/bash -c "poetry run uvicorn server.api:app --host 0.0.0.0 --port 8000"
    volumes:
      - .:/app
    ports:
      - "${CONSERVER_EXTERNAL_PORT:-8000}:8000"
    depends_on:
      - redis
    env_file:
      - .env
    networks:
      - conserver
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`${DNS_HOST}`) && PathPrefix(`/api`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=myresolver"
      - "traefik.http.services.api.loadbalancer.server.port=8000"
      - "traefik.http.middlewares.strip-api-prefix.stripprefix.prefixes=/api"
      - "com.datadoghq.ad.check_names=['python']"
      - "com.datadoghq.ad.init_configs=[{}]"
      - "com.datadoghq.ad.instances=[{'python_service': 'conserver.api'}]"

  redis:
    image: "redis/redis-stack:latest"
    ports:
      - "${REDIS_EXTERNAL_PORT:-8001}:8001"
    environment:
      REDIS_ARGS: --save 20 1 --notify-keyspace-events Ex --dir /data --appendonly yes
    mem_limit: 1gb # <===== IMPORTANT!!!! We're overriding this in the docker-compose.override.yml file
    volumes:
      - /opt/vcon-data/redis:/data # Production: use a persistent host directory
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - conserver
    labels:
      - "com.datadoghq.ad.check_names=['conserver.redis']"
      - "com.datadoghq.ad.init_configs=[{}]"
      - "com.datadoghq.ad.instances=[{'host': 'redis', 'port': 6379}]"

  datadog-agent:
    image: "datadog/agent:latest"
    profiles:
      - datadog
    environment:
      - DD_API_KEY=${DD_API_KEY}
      - DD_SITE=${DD_SITE:-datadoghq.com}
      - DD_LOGS_ENABLED=true
      - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true
      - DD_APM_ENABLED=true
      - DD_APM_NON_LOCAL_TRAFFIC=true
      - DD_DOGSTATSD_NON_LOCAL_TRAFFIC=true
      - DD_CONTAINER_EXCLUDE="name:datadog-agent"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /opt/datadog-agent/run:/opt/datadog-agent/run:rw
    networks:
      - conserver
    restart: unless-stopped
    env_file:
      - .env
    
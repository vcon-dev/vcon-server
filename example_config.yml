---
# Optional imports section for dynamically installed modules
imports:
  # Example of importing a PyPI package
  custom_utility:
    module: custom_utils
    pip_name: custom-utils-package
  # Example of importing from GitHub
  github_helper:
    module: github_helper
    pip_name: git+https://github.com/username/helper-repo.git
  # Example where module name matches pip package name
  requests_import:
    module: requests
    # pip_name not needed since it matches module name
  # Legacy format still supported (string value)
  legacy_module: some.legacy.module

links:
  transcribe:
    module: links.transcribe
    ingress-lists: []
    egress-lists: []
    options:
      transcribe_options:
        model_size: base
        output_options:
        - vendor
  script:
    module: links.script
    ingress-lists: []
    egress-lists: []
  summary:
    module: links.summary
    ingress-lists: []
    egress-lists: []
  tag:
    module: links.tag
    ingress-lists: []
    egress-lists: []
    options:
      tags:
      - Geddy
      - Alex
      - The Professor
  webhook:
    module: links.webhook
    options:
      webhook-urls:
      - notreal.com
  # Example of a link that uses a PyPI package
  custom_pypi_link:
    module: custom_link_module
    pip_name: custom-link-package
    options:
      api_key: your_api_key_here
  # Example of a link that uses a GitHub repository
  custom_github_link:
    module: github_link_module
    pip_name: git+https://github.com/username/repo.git
    options:
      config_param: value
  # Example of a link where module name matches pip package name
  requests_link:
    module: requests
    # pip_name not needed since it matches module name
    options:
      timeout: 30
storages:
  mongo:
    module: storage.mongo
    options:
      url: mongodb://root:example@mongo:27017/
      database: conserver
      collection: vcons
  postgres:
    module: storage.postgres
    options:
      user: thomashowe
      password: postgres
      host: localhost
      port: '5432'
      database: postgres
  s3:
    module: storage.s3
    options:
      aws_access_key_id: some_key
      aws_secret_access_key: some_secret
      aws_bucket: some_bucket
  milvus:
    module: storage.milvus
    options:
      # Connection settings
      host: "localhost"
      port: "19530"
      collection_name: "vcons"
      
      # Embedding settings
      embedding_model: "text-embedding-3-small"
      embedding_dim: 1536
      api_key: "your-openai-api-key"
      organization: ""
      
      # Operation settings
      create_collection_if_missing: true
      skip_if_exists: true
      
      # Vector index settings (Default: IVF_FLAT with L2 distance)
      index_type: "IVF_FLAT"  # Options: IVF_FLAT, IVF_SQ8, IVF_PQ, HNSW, FLAT
      metric_type: "L2"       # Options: L2, IP, COSINE
      nlist: 128              # For IVF indexes: number of clusters
      
      # Advanced HNSW settings (used only if index_type is HNSW)
      # m: 16                 # Number of edges per node 
      # ef_construction: 200  # Size of dynamic candidate list during construction
      
      # Advanced IVF_PQ settings (used only if index_type is IVF_PQ)
      # pq_m: 8               # Number of sub-quantizers
      # pq_nbits: 8           # Bit depth per quantizer
chains:
  sample_chain:
    links:
    - transcribe
    - script
    - summary
    - tag
    ingress_lists:
    - test_list
    storages:
    - mongo
    - postgres
    - s3
    - milvus
    egress_lists:
    - test_output
    enabled: 1
  # Example chain using custom links with dynamic installation
  custom_chain:
    links:
    - custom_pypi_link
    - custom_github_link
    - requests_link
    ingress_lists:
    - custom_test_list
    storages:
    - mongo
    egress_lists:
    - custom_output
    enabled: 1


